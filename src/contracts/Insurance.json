{
  "contractName": "Insurance",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "startDate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x0b97bc86"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "policyAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x19f107dc"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x200d2ed2"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "user",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f8632ba"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "claimAmt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x74b6f66f"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "procedures",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8b4556ae"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hospital",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaa2fedde"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endDate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc24a0f8b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "insuranceCompany",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xd78f51b9"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "premium",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe0a73a93"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_insuranceCompany",
          "type": "address"
        },
        {
          "name": "_hospital",
          "type": "address"
        },
        {
          "name": "_policyAmount",
          "type": "uint256"
        },
        {
          "name": "_premium",
          "type": "uint256"
        },
        {
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "name": "_endDate",
          "type": "uint256"
        }
      ],
      "name": "createIns",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x206c28d0"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimAmt",
          "type": "uint256"
        }
      ],
      "name": "makeClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x1077f06c"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "recordProcedure",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xd51ca0dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProcedures",
      "outputs": [
        {
          "components": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc0a90d24"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x4e71d92d"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x1f7572ec"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "rejectClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x71ad9ca3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStatus",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4e69d560"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061009c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546004546005546006546100a1640100000000026401000000009004565b6101ec565b732079614d8400dc3bf38e651fd6088bc1f2e596e96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733f0c8ff6d7af3dd652206d63cd62ee97777d00fa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550737ea79fb2723baf78d4f6a13c58e138263fdce7a3600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060646003819055506002600481905550606460058190555060c86006819055506000600760006101000a81548160ff021916908360028111156101de57fe5b021790555050505050505050565b611ad6806101fb6000396000f3fe6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b97bc86146101015780631077f06c1461012c57806319f107dc146101555780631f7572ec14610180578063200d2ed214610197578063206c28d0146101c25780634e69d560146101eb5780634e71d92d146102165780634f8632ba1461022d57806371ad9ca31461025857806374b6f66f1461026f5780638b4556ae1461029a578063aa2fedde146102d8578063c0a90d2414610303578063c24a0f8b1461032e578063d51ca0dd14610359578063d78f51b914610382578063e0a73a93146103ad575b600080fd5b34801561010d57600080fd5b506101166103d8565b604051610123919061191a565b60405180910390f35b34801561013857600080fd5b50610153600480360361014e9190810190611173565b6103de565b005b34801561016157600080fd5b5061016a610479565b604051610177919061191a565b60405180910390f35b34801561018c57600080fd5b5061019561047f565b005b3480156101a357600080fd5b506101ac6105e3565b6040516101b9919061172d565b60405180910390f35b3480156101ce57600080fd5b506101e960048036036101e49190810190611081565b6105f6565b005b3480156101f757600080fd5b50610200610741565b60405161020d9190611748565b60405180910390f35b34801561022257600080fd5b5061022b610854565b005b34801561023957600080fd5b506102426109ed565b60405161024f91906116f0565b60405180910390f35b34801561026457600080fd5b5061026d610a12565b005b34801561027b57600080fd5b50610284610b33565b604051610291919061191a565b60405180910390f35b3480156102a657600080fd5b506102c160048036036102bc9190810190611173565b610b39565b6040516102cf92919061176a565b60405180910390f35b3480156102e457600080fd5b506102ed610c04565b6040516102fa91906116f0565b60405180910390f35b34801561030f57600080fd5b50610318610c2a565b604051610325919061170b565b60405180910390f35b34801561033a57600080fd5b50610343610d35565b604051610350919061191a565b60405180910390f35b34801561036557600080fd5b50610380600480360361037b919081019061111f565b610d3b565b005b34801561038e57600080fd5b50610397610f32565b6040516103a491906116f0565b60405180910390f35b3480156103b957600080fd5b506103c2610f58565b6040516103cf919061191a565b60405180910390f35b60055481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561046f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610466906118da565b60405180910390fd5b8060088190555050565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610511576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105089061181a565b60405180910390fd5b60028081111561051d57fe5b600760009054906101000a900460ff16600281111561053857fe5b14151561057a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610571906118fa565b60405180910390fd5b600854600354036003819055506000600281111561059457fe5b600760009054906101000a900460ff1660028111156105af57fe5b5050600060035414156105e1576001600760006101000a81548160ff021916908360028111156105db57fe5b02179055505b565b600760009054906101000a900460ff1681565b732079614d8400dc3bf38e651fd6088bc1f2e596e96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733f0c8ff6d7af3dd652206d63cd62ee97777d00fa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550737ea79fb2723baf78d4f6a13c58e138263fdce7a3600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060646003819055506002600481905550606460058190555060c86006819055506000600760006101000a81548160ff0219169083600281111561073357fe5b021790555050505050505050565b606060028081111561074f57fe5b600760009054906101000a900460ff16600281111561076a57fe5b14156107ad576040805190810160405280600781526020017f436c61696d6564000000000000000000000000000000000000000000000000008152509050610851565b600160028111156107ba57fe5b600760009054906101000a900460ff1660028111156107d557fe5b1415610818576040805190810160405280600881526020017f496e6163746976650000000000000000000000000000000000000000000000008152509050610851565b6040805190810160405280600681526020017f416374697665000000000000000000000000000000000000000000000000000081525090505b90565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc9061183a565b60405180910390fd5b600060028111156108f257fe5b600760009054906101000a900460ff16600281111561090d57fe5b148061093d575060028081111561092057fe5b600760009054906101000a900460ff16600281111561093b57fe5b145b151561097e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109759061179a565b60405180910390fd5b600354600854111515156109c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109be9061189a565b60405180910390fd5b6002600760006101000a81548160ff021916908360028111156109e657fe5b0217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9b9061185a565b60405180910390fd5b600280811115610ab057fe5b600760009054906101000a900460ff166002811115610acb57fe5b141515610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b04906118ba565b60405180910390fd5b6000600760006101000a81548160ff02191690836002811115610b2c57fe5b0217905550565b60085481565b600981815481101515610b4857fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bf45780601f10610bc957610100808354040283529160200191610bf4565b820191906000526020600020905b815481529060010190602001808311610bd757829003601f168201915b5050505050908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606009805480602002602001604051908101604052809291908181526020016000905b82821015610d2c5783829060005260206000209060020201604080519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d0a5780601f10610cdf57610100808354040283529160200191610d0a565b820191906000526020600020905b815481529060010190602001808311610ced57829003601f168201915b5050505050815260200160018201548152505081526020019060010190610c4e565b50505050905090565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc49061187a565b60405180910390fd5b600280811115610dd957fe5b600760009054906101000a900460ff166002811115610df457fe5b141515610e36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2d906117da565b60405180910390fd5b60055481111515610e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e73906117fa565b60405180910390fd5b60065481101515610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb9906117ba565b60405180910390fd5b6009604080519081016040528084815260200183815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610f20929190610f5e565b50602082015181600101555050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f9f57805160ff1916838001178555610fcd565b82800160010185558215610fcd579182015b82811115610fcc578251825591602001919060010190610fb1565b5b509050610fda9190610fde565b5090565b61100091905b80821115610ffc576000816000905550600101610fe4565b5090565b90565b600061100f8235611a1b565b905092915050565b600082601f830112151561102a57600080fd5b813561103d61103882611962565b611935565b9150808252602083016020830185838301111561105957600080fd5b611064838284611a49565b50505092915050565b60006110798235611a2d565b905092915050565b600080600080600080600060e0888a03121561109c57600080fd5b60006110aa8a828b01611003565b97505060206110bb8a828b01611003565b96505060406110cc8a828b01611003565b95505060606110dd8a828b0161106d565b94505060806110ee8a828b0161106d565b93505060a06110ff8a828b0161106d565b92505060c06111108a828b0161106d565b91505092959891949750929550565b6000806040838503121561113257600080fd5b600083013567ffffffffffffffff81111561114c57600080fd5b61115885828601611017565b92505060206111698582860161106d565b9150509250929050565b60006020828403121561118557600080fd5b60006111938482850161106d565b91505092915050565b6111a5816119c9565b82525050565b60006111b68261199b565b808452602084019350836020820285016111cf8561198e565b60005b848110156112085783830388526111ea8383516116a4565b92506111f5826119bc565b91506020880197506001810190506111d2565b508196508694505050505092915050565b61122281611a37565b82525050565b6000611233826119b1565b808452611247816020860160208601611a58565b61125081611a8b565b602085010191505092915050565b6000611269826119a6565b80845261127d816020860160208601611a58565b61128681611a8b565b602085010191505092915050565b6000603582527f54686520706f6c696379206d75737420626520616374697665206f7220636c6160208301527f696d656420746f206d616b65206120636c61696d2e00000000000000000000006040830152606082019050919050565b6000602d82527f5468652074696d65206f662070726f6365647572652073686f756c642062656660208301527f6f726520656e6420646174652e000000000000000000000000000000000000006040830152606082019050919050565b6000603182527f54686520706f6c696379206d75737420626520636c61696d656420746f20726560208301527f636f726420612070726f6365647572652e0000000000000000000000000000006040830152606082019050919050565b6000603182527f5468652074696d65206f662070726f6365647572652073686f756c642062652060208301527f616674657220737461727420646174652e0000000000000000000000000000006040830152606082019050919050565b6000603082527f4f6e6c792074686520496e737572616e636520436f6d70616e792063616e206160208301527f63636570742074686520636c61696d2e000000000000000000000000000000006040830152606082019050919050565b6000602a82527f4f6e6c792074686520757365722063616e20636c61696d2074686520706f6c6960208301527f637920616d6f756e742e000000000000000000000000000000000000000000006040830152606082019050919050565b6000603082527f4f6e6c792074686520496e737572616e636520436f6d70616e792063616e207260208301527f656a6563742074686520636c61696d2e000000000000000000000000000000006040830152606082019050919050565b6000602982527f4f6e6c792074686520686f73706974616c2063616e207265636f72642061207060208301527f726f6365647572652e00000000000000000000000000000000000000000000006040830152606082019050919050565b6000603a82527f54686520636c61696d206d757374206265206c657373207468616e206f72206560208301527f7175616c20746f2074686520706f6c69637920616d6f756e742e0000000000006040830152606082019050919050565b6000601f82527f436c61696d206d757374206265206d61646520746f2072656a656374206974006020830152604082019050919050565b6000602882527f4f6e6c792074686520757365722063616e207365742074686520706f6c69637960208301527f20616d6f756e742e0000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601f82527f436c61696d206d757374206265206d61646520746f20616363657074206974006020830152604082019050919050565b600060408301600083015184820360008601526116c1828261125e565b91505060208301516116d660208601826116e1565b508091505092915050565b6116ea81611a11565b82525050565b6000602082019050611705600083018461119c565b92915050565b6000602082019050818103600083015261172581846111ab565b905092915050565b60006020820190506117426000830184611219565b92915050565b600060208201905081810360008301526117628184611228565b905092915050565b60006040820190508181036000830152611784818561125e565b905061179360208301846116e1565b9392505050565b600060208201905081810360008301526117b381611294565b9050919050565b600060208201905081810360008301526117d3816112f1565b9050919050565b600060208201905081810360008301526117f38161134e565b9050919050565b60006020820190508181036000830152611813816113ab565b9050919050565b6000602082019050818103600083015261183381611408565b9050919050565b6000602082019050818103600083015261185381611465565b9050919050565b60006020820190508181036000830152611873816114c2565b9050919050565b600060208201905081810360008301526118938161151f565b9050919050565b600060208201905081810360008301526118b38161157c565b9050919050565b600060208201905081810360008301526118d3816115d9565b9050919050565b600060208201905081810360008301526118f381611610565b9050919050565b600060208201905081810360008301526119138161166d565b9050919050565b600060208201905061192f60008301846116e1565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561195857600080fd5b8060405250919050565b600067ffffffffffffffff82111561197957600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b60006119d4826119f1565b9050919050565b60006003821015156119e957fe5b819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a26826119f1565b9050919050565b6000819050919050565b6000611a42826119db565b9050919050565b82818337600083830152505050565b60005b83811015611a76578082015181840152602081019050611a5b565b83811115611a85576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820a6828f71f488cf9164b2cd5e1a003868ea392f4bbe9566e12da35cf0420f1f5a6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b97bc86146101015780631077f06c1461012c57806319f107dc146101555780631f7572ec14610180578063200d2ed214610197578063206c28d0146101c25780634e69d560146101eb5780634e71d92d146102165780634f8632ba1461022d57806371ad9ca31461025857806374b6f66f1461026f5780638b4556ae1461029a578063aa2fedde146102d8578063c0a90d2414610303578063c24a0f8b1461032e578063d51ca0dd14610359578063d78f51b914610382578063e0a73a93146103ad575b600080fd5b34801561010d57600080fd5b506101166103d8565b604051610123919061191a565b60405180910390f35b34801561013857600080fd5b50610153600480360361014e9190810190611173565b6103de565b005b34801561016157600080fd5b5061016a610479565b604051610177919061191a565b60405180910390f35b34801561018c57600080fd5b5061019561047f565b005b3480156101a357600080fd5b506101ac6105e3565b6040516101b9919061172d565b60405180910390f35b3480156101ce57600080fd5b506101e960048036036101e49190810190611081565b6105f6565b005b3480156101f757600080fd5b50610200610741565b60405161020d9190611748565b60405180910390f35b34801561022257600080fd5b5061022b610854565b005b34801561023957600080fd5b506102426109ed565b60405161024f91906116f0565b60405180910390f35b34801561026457600080fd5b5061026d610a12565b005b34801561027b57600080fd5b50610284610b33565b604051610291919061191a565b60405180910390f35b3480156102a657600080fd5b506102c160048036036102bc9190810190611173565b610b39565b6040516102cf92919061176a565b60405180910390f35b3480156102e457600080fd5b506102ed610c04565b6040516102fa91906116f0565b60405180910390f35b34801561030f57600080fd5b50610318610c2a565b604051610325919061170b565b60405180910390f35b34801561033a57600080fd5b50610343610d35565b604051610350919061191a565b60405180910390f35b34801561036557600080fd5b50610380600480360361037b919081019061111f565b610d3b565b005b34801561038e57600080fd5b50610397610f32565b6040516103a491906116f0565b60405180910390f35b3480156103b957600080fd5b506103c2610f58565b6040516103cf919061191a565b60405180910390f35b60055481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561046f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610466906118da565b60405180910390fd5b8060088190555050565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610511576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105089061181a565b60405180910390fd5b60028081111561051d57fe5b600760009054906101000a900460ff16600281111561053857fe5b14151561057a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610571906118fa565b60405180910390fd5b600854600354036003819055506000600281111561059457fe5b600760009054906101000a900460ff1660028111156105af57fe5b5050600060035414156105e1576001600760006101000a81548160ff021916908360028111156105db57fe5b02179055505b565b600760009054906101000a900460ff1681565b732079614d8400dc3bf38e651fd6088bc1f2e596e96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733f0c8ff6d7af3dd652206d63cd62ee97777d00fa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550737ea79fb2723baf78d4f6a13c58e138263fdce7a3600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060646003819055506002600481905550606460058190555060c86006819055506000600760006101000a81548160ff0219169083600281111561073357fe5b021790555050505050505050565b606060028081111561074f57fe5b600760009054906101000a900460ff16600281111561076a57fe5b14156107ad576040805190810160405280600781526020017f436c61696d6564000000000000000000000000000000000000000000000000008152509050610851565b600160028111156107ba57fe5b600760009054906101000a900460ff1660028111156107d557fe5b1415610818576040805190810160405280600881526020017f496e6163746976650000000000000000000000000000000000000000000000008152509050610851565b6040805190810160405280600681526020017f416374697665000000000000000000000000000000000000000000000000000081525090505b90565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dc9061183a565b60405180910390fd5b600060028111156108f257fe5b600760009054906101000a900460ff16600281111561090d57fe5b148061093d575060028081111561092057fe5b600760009054906101000a900460ff16600281111561093b57fe5b145b151561097e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109759061179a565b60405180910390fd5b600354600854111515156109c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109be9061189a565b60405180910390fd5b6002600760006101000a81548160ff021916908360028111156109e657fe5b0217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9b9061185a565b60405180910390fd5b600280811115610ab057fe5b600760009054906101000a900460ff166002811115610acb57fe5b141515610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b04906118ba565b60405180910390fd5b6000600760006101000a81548160ff02191690836002811115610b2c57fe5b0217905550565b60085481565b600981815481101515610b4857fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bf45780601f10610bc957610100808354040283529160200191610bf4565b820191906000526020600020905b815481529060010190602001808311610bd757829003601f168201915b5050505050908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606009805480602002602001604051908101604052809291908181526020016000905b82821015610d2c5783829060005260206000209060020201604080519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d0a5780601f10610cdf57610100808354040283529160200191610d0a565b820191906000526020600020905b815481529060010190602001808311610ced57829003601f168201915b5050505050815260200160018201548152505081526020019060010190610c4e565b50505050905090565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc49061187a565b60405180910390fd5b600280811115610dd957fe5b600760009054906101000a900460ff166002811115610df457fe5b141515610e36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2d906117da565b60405180910390fd5b60055481111515610e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e73906117fa565b60405180910390fd5b60065481101515610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb9906117ba565b60405180910390fd5b6009604080519081016040528084815260200183815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610f20929190610f5e565b50602082015181600101555050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f9f57805160ff1916838001178555610fcd565b82800160010185558215610fcd579182015b82811115610fcc578251825591602001919060010190610fb1565b5b509050610fda9190610fde565b5090565b61100091905b80821115610ffc576000816000905550600101610fe4565b5090565b90565b600061100f8235611a1b565b905092915050565b600082601f830112151561102a57600080fd5b813561103d61103882611962565b611935565b9150808252602083016020830185838301111561105957600080fd5b611064838284611a49565b50505092915050565b60006110798235611a2d565b905092915050565b600080600080600080600060e0888a03121561109c57600080fd5b60006110aa8a828b01611003565b97505060206110bb8a828b01611003565b96505060406110cc8a828b01611003565b95505060606110dd8a828b0161106d565b94505060806110ee8a828b0161106d565b93505060a06110ff8a828b0161106d565b92505060c06111108a828b0161106d565b91505092959891949750929550565b6000806040838503121561113257600080fd5b600083013567ffffffffffffffff81111561114c57600080fd5b61115885828601611017565b92505060206111698582860161106d565b9150509250929050565b60006020828403121561118557600080fd5b60006111938482850161106d565b91505092915050565b6111a5816119c9565b82525050565b60006111b68261199b565b808452602084019350836020820285016111cf8561198e565b60005b848110156112085783830388526111ea8383516116a4565b92506111f5826119bc565b91506020880197506001810190506111d2565b508196508694505050505092915050565b61122281611a37565b82525050565b6000611233826119b1565b808452611247816020860160208601611a58565b61125081611a8b565b602085010191505092915050565b6000611269826119a6565b80845261127d816020860160208601611a58565b61128681611a8b565b602085010191505092915050565b6000603582527f54686520706f6c696379206d75737420626520616374697665206f7220636c6160208301527f696d656420746f206d616b65206120636c61696d2e00000000000000000000006040830152606082019050919050565b6000602d82527f5468652074696d65206f662070726f6365647572652073686f756c642062656660208301527f6f726520656e6420646174652e000000000000000000000000000000000000006040830152606082019050919050565b6000603182527f54686520706f6c696379206d75737420626520636c61696d656420746f20726560208301527f636f726420612070726f6365647572652e0000000000000000000000000000006040830152606082019050919050565b6000603182527f5468652074696d65206f662070726f6365647572652073686f756c642062652060208301527f616674657220737461727420646174652e0000000000000000000000000000006040830152606082019050919050565b6000603082527f4f6e6c792074686520496e737572616e636520436f6d70616e792063616e206160208301527f63636570742074686520636c61696d2e000000000000000000000000000000006040830152606082019050919050565b6000602a82527f4f6e6c792074686520757365722063616e20636c61696d2074686520706f6c6960208301527f637920616d6f756e742e000000000000000000000000000000000000000000006040830152606082019050919050565b6000603082527f4f6e6c792074686520496e737572616e636520436f6d70616e792063616e207260208301527f656a6563742074686520636c61696d2e000000000000000000000000000000006040830152606082019050919050565b6000602982527f4f6e6c792074686520686f73706974616c2063616e207265636f72642061207060208301527f726f6365647572652e00000000000000000000000000000000000000000000006040830152606082019050919050565b6000603a82527f54686520636c61696d206d757374206265206c657373207468616e206f72206560208301527f7175616c20746f2074686520706f6c69637920616d6f756e742e0000000000006040830152606082019050919050565b6000601f82527f436c61696d206d757374206265206d61646520746f2072656a656374206974006020830152604082019050919050565b6000602882527f4f6e6c792074686520757365722063616e207365742074686520706f6c69637960208301527f20616d6f756e742e0000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601f82527f436c61696d206d757374206265206d61646520746f20616363657074206974006020830152604082019050919050565b600060408301600083015184820360008601526116c1828261125e565b91505060208301516116d660208601826116e1565b508091505092915050565b6116ea81611a11565b82525050565b6000602082019050611705600083018461119c565b92915050565b6000602082019050818103600083015261172581846111ab565b905092915050565b60006020820190506117426000830184611219565b92915050565b600060208201905081810360008301526117628184611228565b905092915050565b60006040820190508181036000830152611784818561125e565b905061179360208301846116e1565b9392505050565b600060208201905081810360008301526117b381611294565b9050919050565b600060208201905081810360008301526117d3816112f1565b9050919050565b600060208201905081810360008301526117f38161134e565b9050919050565b60006020820190508181036000830152611813816113ab565b9050919050565b6000602082019050818103600083015261183381611408565b9050919050565b6000602082019050818103600083015261185381611465565b9050919050565b60006020820190508181036000830152611873816114c2565b9050919050565b600060208201905081810360008301526118938161151f565b9050919050565b600060208201905081810360008301526118b38161157c565b9050919050565b600060208201905081810360008301526118d3816115d9565b9050919050565b600060208201905081810360008301526118f381611610565b9050919050565b600060208201905081810360008301526119138161166d565b9050919050565b600060208201905061192f60008301846116e1565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561195857600080fd5b8060405250919050565b600067ffffffffffffffff82111561197957600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b60006119d4826119f1565b9050919050565b60006003821015156119e957fe5b819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a26826119f1565b9050919050565b6000819050919050565b6000611a42826119db565b9050919050565b82818337600083830152505050565b60005b83811015611a76578082015181840152602081019050611a5b565b83811115611a85576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820a6828f71f488cf9164b2cd5e1a003868ea392f4bbe9566e12da35cf0420f1f5a6c6578706572696d656e74616cf50037",
  "sourceMap": "100:4528:0:-;;;883:228;8:9:-1;5:2;;;30:1;27;20:12;5:2;883:228:0;915:188;939:4;;;;;;;;;;;958:16;;;;;;;;;;;989:8;;;;;;;;;;;1012:12;;1039:7;;1061:9;;1085:7;;915:9;;;:188;;;:::i;:::-;100:4528;;1119:568;1361:42;1354:4;;:49;;;;;;;;;;;;;;;;;;1433:42;1414:16;;:61;;;;;;;;;;;;;;;;;;1497:42;1486:8;;:53;;;;;;;;;;;;;;;;;;1565:3;1550:12;:18;;;;1589:1;1579:7;:11;;;;1613:3;1601:9;:15;;;;1637:3;1627:7;:13;;;;1660:19;1651:6;;:28;;;;;;;;;;;;;;;;;;;;;;;;1119:568;;;;;;;:::o;100:4528::-;;;;;;;",
  "deployedSourceMap": "100:4528:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;341:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:21:0;;;;;;;;;;;;;;;;;;;;1776:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1776:163:0;;;;;;;;;;;;;;;;;;;284:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:24:0;;;;;;;;;;;;;;;;;;;;3442:478;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3442:478:0;;;;;;515:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;515:26:0;;;;;;;;;;;;;;;;;;;;1119:568;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1119:568:0;;;;;;;;;;;;;;;;;;;4336:289;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4336:289:0;;;;;;;;;;;;;;;;;;;;2871:563;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2871:563:0;;;;;;154:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;154:19:0;;;;;;;;;;;;;;;;;;;;3928:338;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3928:338:0;;;;;;598:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;598:20:0;;;;;;;;;;;;;;;;;;;;772:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;772:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;218:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:23:0;;;;;;;;;;;;;;;;;;;;2704:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2704:102:0;;;;;;;;;;;;;;;;;;;;369:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;369:19:0;;;;;;;;;;;;;;;;;;;;2040:656;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2040:656:0;;;;;;;;;;;;;;;;;;;180:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;180:31:0;;;;;;;;;;;;;;;;;;;;315:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;315:19:0;;;;;;;;;;;;;;;;;;;;341:21;;;;:::o;1776:163::-;1851:4;;;;;;;;;;;1837:18;;:10;:18;;;1829:71;;;;;;;;;;;;;;;;;;;;;;;;1922:9;1911:8;:20;;;;1776:163;:::o;284:24::-;;;;:::o;3442:478::-;3519:16;;;;;;;;;;;3505:30;;:10;:30;;;3483:128;;;;;;;;;;;;;;;;;;;;;;;;3654:20;3644:30;;;;;;;;:6;;;;;;;;;;;:30;;;;;;;;;3622:111;;;;;;;;;;;;;;;;;;;;;;;;3774:8;;3759:12;;:23;3744:12;:38;;;;3803:19;3793:29;;;;;;;;:6;;;;;;;;;;;:29;;;;;;;;;;3853:1;3837:12;;:17;3833:80;;;3880:21;3871:6;;:30;;;;;;;;;;;;;;;;;;;;;;;;3833:80;3442:478::o;515:26::-;;;;;;;;;;;;;:::o;1119:568::-;1361:42;1354:4;;:49;;;;;;;;;;;;;;;;;;1433:42;1414:16;;:61;;;;;;;;;;;;;;;;;;1497:42;1486:8;;:53;;;;;;;;;;;;;;;;;;1565:3;1550:12;:18;;;;1589:1;1579:7;:11;;;;1613:3;1601:9;:15;;;;1637:3;1627:7;:13;;;;1660:19;1651:6;;:28;;;;;;;;;;;;;;;;;;;;;;;;1119:568;;;;;;;:::o;4336:289::-;4378:13;4418:20;4408:30;;;;;;;;:6;;;;;;;;;;;:30;;;;;;;;;4404:214;;;4455:16;;;;;;;;;;;;;;;;;;;;;;4404:214;4503:21;4493:31;;;;;;;;:6;;;;;;;;;;;:31;;;;;;;;;4489:129;;;4541:17;;;;;;;;;;;;;;;;;;;;;;4489:129;4591:15;;;;;;;;;;;;;;;;;;;;4336:289;;:::o;2871:563::-;2942:4;;;;;;;;;;;2928:18;;:10;:18;;;2906:110;;;;;;;;;;;;;;;;;;;;;;;;3059:19;3049:29;;;;;;;;:6;;;;;;;;;;;:29;;;;;;;;;:63;;;;3092:20;3082:30;;;;;;;;:6;;;;;;;;;;;:30;;;;;;;;;3049:63;3027:166;;;;;;;;;;;;;;;;;;;;;;;;3238:12;;3226:8;;:24;;3204:132;;;;;;;;;;;;;;;;;;;;;;;;3356:20;3347:6;;:29;;;;;;;;;;;;;;;;;;;;;;;;2871:563::o;154:19::-;;;;;;;;;;;;;:::o;3928:338::-;4005:16;;;;;;;;;;;3991:30;;:10;:30;;;3969:128;;;;;;;;;;;;;;;;;;;;;;;;4140:20;4130:30;;;;;;;;:6;;;;;;;;;;;:30;;;;;;;;;4108:111;;;;;;;;;;;;;;;;;;;;;;;;4239:19;4230:6;;:28;;;;;;;;;;;;;;;;;;;;;;;;3928:338::o;598:20::-;;;;:::o;772:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;218:23::-;;;;;;;;;;;;;:::o;2704:102::-;2750:18;2788:10;2781:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2704:102;:::o;369:19::-;;;;:::o;2040:656::-;2157:8;;;;;;;;;;;2143:22;;:10;:22;;;2121:113;;;;;;;;;;;;;;;;;;;;;;;;2277:20;2267:30;;;;;;;;:6;;;;;;;;;;;:30;;;;;;;;;2245:129;;;;;;;;;;;;;;;;;;;;;;;;2420:9;;2407:10;:22;2385:121;;;;;;;;;;;;;;;;;;;;;;;;2552:7;;2539:10;:20;2517:115;;;;;;;;;;;;;;;;;;;;;;;;2643:10;2659:28;;;;;;;;;2669:5;2659:28;;;;2676:10;2659:28;;;2643:45;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2643:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2040:656;;:::o;180:31::-;;;;;;;;;;;;;:::o;315:19::-;;;;:::o;100:4528::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;131:442;;233:3;226:4;218:6;214:17;210:27;203:35;200:2;;;251:1;248;241:12;200:2;288:6;275:20;310:65;325:49;367:6;325:49;;;310:65;;;301:74;;395:6;388:5;381:21;431:4;423:6;419:17;464:4;457:5;453:16;499:3;490:6;485:3;481:16;478:25;475:2;;;516:1;513;506:12;475:2;526:41;560:6;555:3;550;526:41;;;193:380;;;;;;;;581:118;;648:46;686:6;673:20;648:46;;;639:55;;633:66;;;;;706:995;;;;;;;;912:3;900:9;891:7;887:23;883:33;880:2;;;929:1;926;919:12;880:2;964:1;981:53;1026:7;1017:6;1006:9;1002:22;981:53;;;971:63;;943:97;1071:2;1089:53;1134:7;1125:6;1114:9;1110:22;1089:53;;;1079:63;;1050:98;1179:2;1197:53;1242:7;1233:6;1222:9;1218:22;1197:53;;;1187:63;;1158:98;1287:2;1305:53;1350:7;1341:6;1330:9;1326:22;1305:53;;;1295:63;;1266:98;1395:3;1414:53;1459:7;1450:6;1439:9;1435:22;1414:53;;;1404:63;;1374:99;1504:3;1523:53;1568:7;1559:6;1548:9;1544:22;1523:53;;;1513:63;;1483:99;1613:3;1632:53;1677:7;1668:6;1657:9;1653:22;1632:53;;;1622:63;;1592:99;874:827;;;;;;;;;;;1708:472;;;1839:2;1827:9;1818:7;1814:23;1810:32;1807:2;;;1855:1;1852;1845:12;1807:2;1918:1;1907:9;1903:17;1890:31;1941:18;1933:6;1930:30;1927:2;;;1973:1;1970;1963:12;1927:2;1993:63;2048:7;2039:6;2028:9;2024:22;1993:63;;;1983:73;;1869:193;2093:2;2111:53;2156:7;2147:6;2136:9;2132:22;2111:53;;;2101:63;;2072:98;1801:379;;;;;;2187:241;;2291:2;2279:9;2270:7;2266:23;2262:32;2259:2;;;2307:1;2304;2297:12;2259:2;2342:1;2359:53;2404:7;2395:6;2384:9;2380:22;2359:53;;;2349:63;;2321:97;2253:175;;;;;2435:110;2508:31;2533:5;2508:31;;;2503:3;2496:44;2490:55;;;2621:878;;2798:75;2867:5;2798:75;;;2891:6;2886:3;2879:19;2915:4;2910:3;2906:14;2899:21;;2963:3;3005:4;2997:6;2993:17;2988:3;2984:27;3031:77;3102:5;3031:77;;;3129:1;3114:346;3139:6;3136:1;3133:13;3114:346;;;3201:9;3195:4;3191:20;3186:3;3179:33;3227:100;3322:4;3313:6;3307:13;3227:100;;;3219:108;;3344:81;3418:6;3344:81;;;3334:91;;3448:4;3443:3;3439:14;3432:21;;3161:1;3158;3154:9;3149:14;;3114:346;;;3118:14;3473:4;3466:11;;3490:3;3483:10;;2777:722;;;;;;;;;3507:142;3593:50;3637:5;3593:50;;;3588:3;3581:63;3575:74;;;3656:300;;3758:39;3791:5;3758:39;;;3814:6;3809:3;3802:19;3826:63;3882:6;3875:4;3870:3;3866:14;3859:4;3852:5;3848:16;3826:63;;;3921:29;3943:6;3921:29;;;3914:4;3909:3;3905:14;3901:50;3894:57;;3738:218;;;;;;3963:292;;4061:35;4090:5;4061:35;;;4113:6;4108:3;4101:19;4125:63;4181:6;4174:4;4169:3;4165:14;4158:4;4151:5;4147:16;4125:63;;;4220:29;4242:6;4220:29;;;4213:4;4208:3;4204:14;4200:50;4193:57;;4041:214;;;;;;4263:397;;4418:2;4413:3;4406:15;4455:66;4450:2;4445:3;4441:12;4434:88;4556:66;4551:2;4546:3;4542:12;4535:88;4651:2;4646:3;4642:12;4635:19;;4399:261;;;;4669:397;;4824:2;4819:3;4812:15;4861:66;4856:2;4851:3;4847:12;4840:88;4962:66;4957:2;4952:3;4948:12;4941:88;5057:2;5052:3;5048:12;5041:19;;4805:261;;;;5075:397;;5230:2;5225:3;5218:15;5267:66;5262:2;5257:3;5253:12;5246:88;5368:66;5363:2;5358:3;5354:12;5347:88;5463:2;5458:3;5454:12;5447:19;;5211:261;;;;5481:397;;5636:2;5631:3;5624:15;5673:66;5668:2;5663:3;5659:12;5652:88;5774:66;5769:2;5764:3;5760:12;5753:88;5869:2;5864:3;5860:12;5853:19;;5617:261;;;;5887:397;;6042:2;6037:3;6030:15;6079:66;6074:2;6069:3;6065:12;6058:88;6180:66;6175:2;6170:3;6166:12;6159:88;6275:2;6270:3;6266:12;6259:19;;6023:261;;;;6293:397;;6448:2;6443:3;6436:15;6485:66;6480:2;6475:3;6471:12;6464:88;6586:66;6581:2;6576:3;6572:12;6565:88;6681:2;6676:3;6672:12;6665:19;;6429:261;;;;6699:397;;6854:2;6849:3;6842:15;6891:66;6886:2;6881:3;6877:12;6870:88;6992:66;6987:2;6982:3;6978:12;6971:88;7087:2;7082:3;7078:12;7071:19;;6835:261;;;;7105:397;;7260:2;7255:3;7248:15;7297:66;7292:2;7287:3;7283:12;7276:88;7398:66;7393:2;7388:3;7384:12;7377:88;7493:2;7488:3;7484:12;7477:19;;7241:261;;;;7511:397;;7666:2;7661:3;7654:15;7703:66;7698:2;7693:3;7689:12;7682:88;7804:66;7799:2;7794:3;7790:12;7783:88;7899:2;7894:3;7890:12;7883:19;;7647:261;;;;7917:296;;8072:2;8067:3;8060:15;8109:66;8104:2;8099:3;8095:12;8088:88;8204:2;8199:3;8195:12;8188:19;;8053:160;;;;8222:397;;8377:2;8372:3;8365:15;8414:66;8409:2;8404:3;8400:12;8393:88;8515:66;8510:2;8505:3;8501:12;8494:88;8610:2;8605:3;8601:12;8594:19;;8358:261;;;;8628:296;;8783:2;8778:3;8771:15;8820:66;8815:2;8810:3;8806:12;8799:88;8915:2;8910:3;8906:12;8899:19;;8764:160;;;;8995:571;;9132:4;9127:3;9123:14;9218:3;9211:5;9207:15;9201:22;9267:3;9261:4;9257:14;9251:3;9246;9242:13;9235:37;9287:68;9350:4;9337:11;9287:68;;;9279:76;;9152:215;9448:4;9441:5;9437:16;9431:23;9466:62;9522:4;9517:3;9513:14;9500:11;9466:62;;;9377:163;9557:4;9550:11;;9105:461;;;;;;9573:110;9646:31;9671:5;9646:31;;;9641:3;9634:44;9628:55;;;9690:193;;9798:2;9787:9;9783:18;9775:26;;9812:61;9870:1;9859:9;9855:17;9846:6;9812:61;;;9769:114;;;;;9890:425;;10090:2;10079:9;10075:18;10067:26;;10140:9;10134:4;10130:20;10126:1;10115:9;10111:17;10104:47;10165:140;10300:4;10291:6;10165:140;;;10157:148;;10061:254;;;;;10322:219;;10443:2;10432:9;10428:18;10420:26;;10457:74;10528:1;10517:9;10513:17;10504:6;10457:74;;;10414:127;;;;;10548:281;;10676:2;10665:9;10661:18;10653:26;;10726:9;10720:4;10716:20;10712:1;10701:9;10697:17;10690:47;10751:68;10814:4;10805:6;10751:68;;;10743:76;;10647:182;;;;;10836:374;;10988:2;10977:9;10973:18;10965:26;;11038:9;11032:4;11028:20;11024:1;11013:9;11009:17;11002:47;11063:64;11122:4;11113:6;11063:64;;;11055:72;;11138:62;11196:2;11185:9;11181:18;11172:6;11138:62;;;10959:251;;;;;;11217:387;;11398:2;11387:9;11383:18;11375:26;;11448:9;11442:4;11438:20;11434:1;11423:9;11419:17;11412:47;11473:121;11589:4;11473:121;;;11465:129;;11369:235;;;;11611:387;;11792:2;11781:9;11777:18;11769:26;;11842:9;11836:4;11832:20;11828:1;11817:9;11813:17;11806:47;11867:121;11983:4;11867:121;;;11859:129;;11763:235;;;;12005:387;;12186:2;12175:9;12171:18;12163:26;;12236:9;12230:4;12226:20;12222:1;12211:9;12207:17;12200:47;12261:121;12377:4;12261:121;;;12253:129;;12157:235;;;;12399:387;;12580:2;12569:9;12565:18;12557:26;;12630:9;12624:4;12620:20;12616:1;12605:9;12601:17;12594:47;12655:121;12771:4;12655:121;;;12647:129;;12551:235;;;;12793:387;;12974:2;12963:9;12959:18;12951:26;;13024:9;13018:4;13014:20;13010:1;12999:9;12995:17;12988:47;13049:121;13165:4;13049:121;;;13041:129;;12945:235;;;;13187:387;;13368:2;13357:9;13353:18;13345:26;;13418:9;13412:4;13408:20;13404:1;13393:9;13389:17;13382:47;13443:121;13559:4;13443:121;;;13435:129;;13339:235;;;;13581:387;;13762:2;13751:9;13747:18;13739:26;;13812:9;13806:4;13802:20;13798:1;13787:9;13783:17;13776:47;13837:121;13953:4;13837:121;;;13829:129;;13733:235;;;;13975:387;;14156:2;14145:9;14141:18;14133:26;;14206:9;14200:4;14196:20;14192:1;14181:9;14177:17;14170:47;14231:121;14347:4;14231:121;;;14223:129;;14127:235;;;;14369:387;;14550:2;14539:9;14535:18;14527:26;;14600:9;14594:4;14590:20;14586:1;14575:9;14571:17;14564:47;14625:121;14741:4;14625:121;;;14617:129;;14521:235;;;;14763:387;;14944:2;14933:9;14929:18;14921:26;;14994:9;14988:4;14984:20;14980:1;14969:9;14965:17;14958:47;15019:121;15135:4;15019:121;;;15011:129;;14915:235;;;;15157:387;;15338:2;15327:9;15323:18;15315:26;;15388:9;15382:4;15378:20;15374:1;15363:9;15359:17;15352:47;15413:121;15529:4;15413:121;;;15405:129;;15309:235;;;;15551:387;;15732:2;15721:9;15717:18;15709:26;;15782:9;15776:4;15772:20;15768:1;15757:9;15753:17;15746:47;15807:121;15923:4;15807:121;;;15799:129;;15703:235;;;;15945:193;;16053:2;16042:9;16038:18;16030:26;;16067:61;16125:1;16114:9;16110:17;16101:6;16067:61;;;16024:114;;;;;16145:256;;16207:2;16201:9;16191:19;;16245:4;16237:6;16233:17;16344:6;16332:10;16329:22;16308:18;16296:10;16293:34;16290:62;16287:2;;;16365:1;16362;16355:12;16287:2;16385:10;16381:2;16374:22;16185:216;;;;;16408:259;;16552:18;16544:6;16541:30;16538:2;;;16584:1;16581;16574:12;16538:2;16628:4;16624:9;16617:4;16609:6;16605:17;16601:33;16593:41;;16657:4;16651;16647:15;16639:23;;16475:192;;;;16676:142;;16806:4;16798:6;16794:17;16783:28;;16775:43;;;;16827:128;;16944:5;16938:12;16928:22;;16922:33;;;;16962:88;;17039:5;17033:12;17023:22;;17017:33;;;;17057:92;;17138:5;17132:12;17122:22;;17116:33;;;;17157:143;;17289:4;17281:6;17277:17;17266:28;;17259:41;;;;17308:105;;17377:31;17402:5;17377:31;;;17366:42;;17360:53;;;;17420:132;;17513:1;17506:5;17503:12;17496:20;17493:2;;;17519:9;17493:2;17542:5;17531:16;;17487:65;;;;17559:128;;17639:42;17632:5;17628:54;17617:65;;17611:76;;;;17694:79;;17763:5;17752:16;;17746:27;;;;17780:105;;17849:31;17874:5;17849:31;;;17838:42;;17832:53;;;;17892:79;;17961:5;17950:16;;17944:27;;;;17978:143;;18070:46;18110:5;18070:46;;;18057:59;;18051:70;;;;18129:145;18210:6;18205:3;18200;18187:30;18266:1;18257:6;18252:3;18248:16;18241:27;18180:94;;;;18283:268;18348:1;18355:101;18369:6;18366:1;18363:13;18355:101;;;18445:1;18440:3;18436:11;18430:18;18426:1;18421:3;18417:11;18410:39;18391:2;18388:1;18384:10;18379:15;;18355:101;;;18471:6;18468:1;18465:13;18462:2;;;18536:1;18527:6;18522:3;18518:16;18511:27;18462:2;18332:219;;;;;18559:97;;18647:2;18643:7;18638:2;18631:5;18627:14;18623:28;18613:38;;18607:49;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract Insurance {\r\n    // Define the entities\r\n    address public user;\r\n    address public insuranceCompany;\r\n    address public hospital;\r\n\r\n    // Define the policy details\r\n    uint public policyAmount;\r\n    uint public premium;\r\n    uint public startDate;\r\n    uint public endDate;\r\n\r\n    // Define the policy status\r\n    enum PolicyStatus {\r\n        Active,\r\n        Inactive,\r\n        Claimed\r\n    }\r\n    PolicyStatus public status;\r\n\r\n    //Define the amount that has to be claimed\r\n    uint public claimAmt;\r\n\r\n    // Define the list of medical procedures and their timestamps\r\n    struct Procedure {\r\n        string name;\r\n        uint timestamp;\r\n    }\r\n    Procedure[] public procedures;\r\n\r\n    // Define the constructor function to initialize the policy details\r\n    constructor() public {\r\n        createIns(\r\n            user,\r\n            insuranceCompany,\r\n            hospital,\r\n            policyAmount,\r\n            premium,\r\n            startDate,\r\n            endDate\r\n        );\r\n    }\r\n\r\n    function createIns(\r\n        address _user,\r\n        address _insuranceCompany,\r\n        address _hospital,\r\n        uint _policyAmount,\r\n        uint _premium,\r\n        uint _startDate,\r\n        uint _endDate\r\n    ) public {\r\n        user = 0x2079614D8400DC3bf38E651Fd6088BC1f2E596E9;\r\n        insuranceCompany = 0x3f0c8FF6d7aF3DD652206d63cd62eE97777D00fa;\r\n        hospital = 0x7EA79fb2723baF78D4F6a13C58e138263fDce7a3;\r\n        policyAmount = 100;\r\n        premium = 2;\r\n        startDate = 100;\r\n        endDate = 200;\r\n        status = PolicyStatus.Active;\r\n    }\r\n\r\n    // Define the function for the user to record the amount they want to claim\r\n    function makeClaim(uint _claimAmt) public {\r\n        require(msg.sender == user, \"Only the user can set the policy amount.\");\r\n        claimAmt = _claimAmt;\r\n    }\r\n\r\n    // Define the function for the hospital to record a medical procedure and its timestamp\r\n    function recordProcedure(string memory _name, uint _timestamp) public {\r\n        require(\r\n            msg.sender == hospital,\r\n            \"Only the hospital can record a procedure.\"\r\n        );\r\n        require(\r\n            status == PolicyStatus.Claimed,\r\n            \"The policy must be claimed to record a procedure.\"\r\n        );\r\n        require(\r\n            _timestamp > startDate,\r\n            \"The time of procedure should be after start date.\"\r\n        );\r\n        require(\r\n            _timestamp < endDate,\r\n            \"The time of procedure should before end date.\"\r\n        );\r\n        procedures.push(Procedure(_name, _timestamp));\r\n    }\r\n\r\n    function getProcedures() public view returns (Procedure[] memory) {\r\n        return procedures;\r\n    }\r\n\r\n    // Define the function for the user to make a claim\r\n    function claim() public {\r\n        require(\r\n            msg.sender == user,\r\n            \"Only the user can claim the policy amount.\"\r\n        );\r\n        require(\r\n            status == PolicyStatus.Active || status == PolicyStatus.Claimed,\r\n            \"The policy must be active or claimed to make a claim.\"\r\n        );\r\n        require(\r\n            claimAmt <= policyAmount,\r\n            \"The claim must be less than or equal to the policy amount.\"\r\n        );\r\n        status = PolicyStatus.Claimed;\r\n        // payable(user).transfer(policyAmount);\r\n    }\r\n\r\n    function acceptClaim() public {\r\n        require(\r\n            msg.sender == insuranceCompany,\r\n            \"Only the Insurance Company can accept the claim.\"\r\n        );\r\n        require(\r\n            status == PolicyStatus.Claimed,\r\n            \"Claim must be made to accept it\"\r\n        );\r\n        policyAmount = policyAmount - claimAmt;\r\n        status == PolicyStatus.Active;\r\n        if (policyAmount == 0) {\r\n            status = PolicyStatus.Inactive;\r\n        }\r\n    }\r\n\r\n    function rejectClaim() public {\r\n        require(\r\n            msg.sender == insuranceCompany,\r\n            \"Only the Insurance Company can reject the claim.\"\r\n        );\r\n        require(\r\n            status == PolicyStatus.Claimed,\r\n            \"Claim must be made to reject it\"\r\n        );\r\n        status = PolicyStatus.Active;\r\n    }\r\n\r\n    // Define the function to check the status of the policy\r\n    function getStatus() public view returns (string memory) {\r\n        if (status == PolicyStatus.Claimed) {\r\n            return \"Claimed\";\r\n        } else if (status == PolicyStatus.Inactive) {\r\n            return \"Inactive\";\r\n        } else {\r\n            return \"Active\";\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "D:/Sem 6/Blockchain/Project/insurance-blockchain-app/contracts/Insurance.sol",
  "ast": {
    "absolutePath": "/D/Sem 6/Blockchain/Project/insurance-blockchain-app/contracts/Insurance.sol",
    "exportedSymbols": {
      "Insurance": [
        300
      ]
    },
    "id": 301,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 300,
        "linearizedBaseContracts": [
          300
        ],
        "name": "Insurance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "user",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "154:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "154:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6,
            "name": "insuranceCompany",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "180:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "180:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "hospital",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "218:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "218:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "policyAmount",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "284:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "284:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "premium",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "315:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "315:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "startDate",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "341:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "341:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "endDate",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "369:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "369:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Insurance.PolicyStatus",
            "id": 20,
            "members": [
              {
                "id": 17,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "459:6:0"
              },
              {
                "id": 18,
                "name": "Inactive",
                "nodeType": "EnumValue",
                "src": "476:8:0"
              },
              {
                "id": 19,
                "name": "Claimed",
                "nodeType": "EnumValue",
                "src": "495:7:0"
              }
            ],
            "name": "PolicyStatus",
            "nodeType": "EnumDefinition",
            "src": "430:79:0"
          },
          {
            "constant": false,
            "id": 22,
            "name": "status",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "515:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_PolicyStatus_$20",
              "typeString": "enum Insurance.PolicyStatus"
            },
            "typeName": {
              "contractScope": null,
              "id": 21,
              "name": "PolicyStatus",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20,
              "src": "515:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_PolicyStatus_$20",
                "typeString": "enum Insurance.PolicyStatus"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "claimAmt",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "598:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "598:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Insurance.Procedure",
            "id": 29,
            "members": [
              {
                "constant": false,
                "id": 26,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "722:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 25,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "722:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "744:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "744:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Procedure",
            "nodeType": "StructDefinition",
            "scope": 300,
            "src": "694:72:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 32,
            "name": "procedures",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "772:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Procedure_$29_storage_$dyn_storage",
              "typeString": "struct Insurance.Procedure[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 30,
                "name": "Procedure",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 29,
                "src": "772:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Procedure_$29_storage_ptr",
                  "typeString": "struct Insurance.Procedure"
                }
              },
              "id": 31,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "772:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Procedure_$29_storage_$dyn_storage_ptr",
                "typeString": "struct Insurance.Procedure[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "904:207:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "939:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "insuranceCompany",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "958:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "hospital",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "989:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "policyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1012:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1039:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "startDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1061:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "endDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1085:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35,
                      "name": "createIns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "915:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "915:188:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "915:188:0"
                }
              ]
            },
            "documentation": null,
            "id": 46,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "904:0:0"
            },
            "scope": 300,
            "src": "883:228:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1343:344:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1354:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "307832303739363134443834303044433362663338453635314664363038384243316632453539364539",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1361:42:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x2079614D8400DC3bf38E651Fd6088BC1f2E596E9"
                    },
                    "src": "1354:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 67,
                      "name": "insuranceCompany",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1414:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "307833663063384646366437614633444436353232303664363363643632654539373737374430306661",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1433:42:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x3f0c8FF6d7aF3DD652206d63cd62eE97777D00fa"
                    },
                    "src": "1414:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:61:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 71,
                      "name": "hospital",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1486:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "307837454137396662323732336261463738443446366131334335386531333832363366446365376133",
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1497:42:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x7EA79fb2723baF78D4F6a13C58e138263fDce7a3"
                    },
                    "src": "1486:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "policyAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1550:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1565:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1550:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1579:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1589:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1579:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1601:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1613:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1601:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:15:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1627:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "323030",
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1637:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "1627:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1627:13:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1651:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "PolicyStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1660:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                          "typeString": "type(enum Insurance.PolicyStatus)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1660:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "src": "1651:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyStatus_$20",
                      "typeString": "enum Insurance.PolicyStatus"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createIns",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1148:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "_insuranceCompany",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1172:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_hospital",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1208:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "_policyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1236:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1265:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "_startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1289:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_endDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1315:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1137:198:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1343:0:0"
            },
            "scope": 300,
            "src": "1119:568:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "1818:121:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 103,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "1837:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1837:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 105,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1851:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1837:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520757365722063616e207365742074686520706f6c69637920616d6f756e742e",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1857:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd170728183d56f388563872b5146ce355736cd9b705c9862b493112fd1793c9",
                          "typeString": "literal_string \"Only the user can set the policy amount.\""
                        },
                        "value": "Only the user can set the policy amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd170728183d56f388563872b5146ce355736cd9b705c9862b493112fd1793c9",
                          "typeString": "literal_string \"Only the user can set the policy amount.\""
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "1829:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1829:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 110,
                      "name": "claimAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1911:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 111,
                      "name": "_claimAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "1922:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1911:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "_claimAmt",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1795:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1794:16:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1818:0:0"
            },
            "scope": 300,
            "src": "1776:163:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2110:586:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "2143:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2143:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "hospital",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "2157:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2143:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520686f73706974616c2063616e207265636f726420612070726f6365647572652e",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2180:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9499d46b2be886f51a85408a5f1d5d3919ad13eb1daf939a848d338cde425d4a",
                          "typeString": "literal_string \"Only the hospital can record a procedure.\""
                        },
                        "value": "Only the hospital can record a procedure."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9499d46b2be886f51a85408a5f1d5d3919ad13eb1daf939a848d338cde425d4a",
                          "typeString": "literal_string \"Only the hospital can record a procedure.\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "2121:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:113:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:113:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$20",
                          "typeString": "enum Insurance.PolicyStatus"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2267:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 132,
                            "name": "PolicyStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2277:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                              "typeString": "type(enum Insurance.PolicyStatus)"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2277:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "src": "2267:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520706f6c696379206d75737420626520636c61696d656420746f207265636f726420612070726f6365647572652e",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2312:51:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23c4dd57304bfa908d11327eda107380431648bd6cfa28fdd6513099d9726089",
                          "typeString": "literal_string \"The policy must be claimed to record a procedure.\""
                        },
                        "value": "The policy must be claimed to record a procedure."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23c4dd57304bfa908d11327eda107380431648bd6cfa28fdd6513099d9726089",
                          "typeString": "literal_string \"The policy must be claimed to record a procedure.\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "2245:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2245:129:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:129:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "_timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "2407:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "startDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "2420:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2407:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652074696d65206f662070726f6365647572652073686f756c6420626520616674657220737461727420646174652e",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2444:51:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5432c742fcb0f1b68f70c24f7f801ccb39349175343a099200a9ce8c8c094707",
                          "typeString": "literal_string \"The time of procedure should be after start date.\""
                        },
                        "value": "The time of procedure should be after start date."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5432c742fcb0f1b68f70c24f7f801ccb39349175343a099200a9ce8c8c094707",
                          "typeString": "literal_string \"The time of procedure should be after start date.\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "2385:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2385:121:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "2385:121:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "_timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "2539:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "endDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2552:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2539:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652074696d65206f662070726f6365647572652073686f756c64206265666f726520656e6420646174652e",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2574:47:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1829dbcdd50cf2d117fba41b47feb7cfe3e61b40f5e556c241c6f86368df48f7",
                          "typeString": "literal_string \"The time of procedure should before end date.\""
                        },
                        "value": "The time of procedure should before end date."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1829dbcdd50cf2d117fba41b47feb7cfe3e61b40f5e556c241c6f86368df48f7",
                          "typeString": "literal_string \"The time of procedure should before end date.\""
                        }
                      ],
                      "id": 145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "2517:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:115:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2517:115:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "2669:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "_timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "2676:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 155,
                          "name": "Procedure",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "2659:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Procedure_$29_storage_ptr_$",
                            "typeString": "type(struct Insurance.Procedure storage pointer)"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2659:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Procedure_$29_memory",
                          "typeString": "struct Insurance.Procedure memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Procedure_$29_memory",
                          "typeString": "struct Insurance.Procedure memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "procedures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "2643:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Procedure_$29_storage_$dyn_storage",
                          "typeString": "struct Insurance.Procedure storage ref[] storage ref"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2643:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Procedure_$29_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Insurance.Procedure storage ref) returns (uint256)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:45:0"
                }
              ]
            },
            "documentation": null,
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recordProcedure",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2065:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2086:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2064:38:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2110:0:0"
            },
            "scope": 300,
            "src": "2040:656:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "2770:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 168,
                    "name": "procedures",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "2788:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Procedure_$29_storage_$dyn_storage",
                      "typeString": "struct Insurance.Procedure storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 167,
                  "id": 169,
                  "nodeType": "Return",
                  "src": "2781:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProcedures",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2726:2:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2750:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Procedure_$29_memory_$dyn_memory_ptr",
                    "typeString": "struct Insurance.Procedure[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 164,
                      "name": "Procedure",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 29,
                      "src": "2750:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Procedure_$29_storage_ptr",
                        "typeString": "struct Insurance.Procedure"
                      }
                    },
                    "id": 165,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2750:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Procedure_$29_storage_$dyn_storage_ptr",
                      "typeString": "struct Insurance.Procedure[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2749:20:0"
            },
            "scope": 300,
            "src": "2704:102:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2895:539:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 175,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "2928:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2928:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "2942:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2928:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520757365722063616e20636c61696d2074686520706f6c69637920616d6f756e742e",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2961:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7810954e71a8c0461e9b2eb04dfbda2e826fba1a581904207e7aef6358d9ada7",
                          "typeString": "literal_string \"Only the user can claim the policy amount.\""
                        },
                        "value": "Only the user can claim the policy amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7810954e71a8c0461e9b2eb04dfbda2e826fba1a581904207e7aef6358d9ada7",
                          "typeString": "literal_string \"Only the user can claim the policy amount.\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "2906:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2906:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "2906:110:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3049:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 184,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "3059:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3059:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "3049:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3082:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 188,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "3092:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Claimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3092:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "3082:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3049:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520706f6c696379206d75737420626520616374697665206f7220636c61696d656420746f206d616b65206120636c61696d2e",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3127:55:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ff55c984c36c7a43d410c7e8310c54529e38abe56dc9e0351f73f959aa3f055",
                          "typeString": "literal_string \"The policy must be active or claimed to make a claim.\""
                        },
                        "value": "The policy must be active or claimed to make a claim."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ff55c984c36c7a43d410c7e8310c54529e38abe56dc9e0351f73f959aa3f055",
                          "typeString": "literal_string \"The policy must be active or claimed to make a claim.\""
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "3027:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:166:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3027:166:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 196,
                          "name": "claimAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "3226:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "policyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "3238:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3226:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520636c61696d206d757374206265206c657373207468616e206f7220657175616c20746f2074686520706f6c69637920616d6f756e742e",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3265:60:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98af5022111d1e7da4dda966e8ccf1c905bbf499d0237ec9910610f3456294b3",
                          "typeString": "literal_string \"The claim must be less than or equal to the policy amount.\""
                        },
                        "value": "The claim must be less than or equal to the policy amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98af5022111d1e7da4dda966e8ccf1c905bbf499d0237ec9910610f3456294b3",
                          "typeString": "literal_string \"The claim must be less than or equal to the policy amount.\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "3204:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3204:132:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3204:132:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3347:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 203,
                        "name": "PolicyStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3356:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                          "typeString": "type(enum Insurance.PolicyStatus)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Claimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3356:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "src": "3347:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyStatus_$20",
                      "typeString": "enum Insurance.PolicyStatus"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "3347:29:0"
                }
              ]
            },
            "documentation": null,
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2885:2:0"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2895:0:0"
            },
            "scope": 300,
            "src": "2871:563:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "3472:448:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 212,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "3505:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3505:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "insuranceCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "3519:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3505:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520496e737572616e636520436f6d70616e792063616e206163636570742074686520636c61696d2e",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3550:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59ba40b93cf3fc04bd680f81fd0d371589809b85b0ba128512248f96cd68f6d5",
                          "typeString": "literal_string \"Only the Insurance Company can accept the claim.\""
                        },
                        "value": "Only the Insurance Company can accept the claim."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59ba40b93cf3fc04bd680f81fd0d371589809b85b0ba128512248f96cd68f6d5",
                          "typeString": "literal_string \"Only the Insurance Company can accept the claim.\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "3483:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3483:128:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:128:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$20",
                          "typeString": "enum Insurance.PolicyStatus"
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "3644:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 221,
                            "name": "PolicyStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "3654:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                              "typeString": "type(enum Insurance.PolicyStatus)"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3654:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "src": "3644:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436c61696d206d757374206265206d61646520746f20616363657074206974",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3689:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe5c51e88020d296fdf4248e79345f19699ccce26bf526316f1f5d27912dee22",
                          "typeString": "literal_string \"Claim must be made to accept it\""
                        },
                        "value": "Claim must be made to accept it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe5c51e88020d296fdf4248e79345f19699ccce26bf526316f1f5d27912dee22",
                          "typeString": "literal_string \"Claim must be made to accept it\""
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "3622:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3622:111:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3622:111:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "policyAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "3744:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 228,
                        "name": "policyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "3759:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 229,
                        "name": "claimAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "3774:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3759:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3744:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3744:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_PolicyStatus_$20",
                      "typeString": "enum Insurance.PolicyStatus"
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3793:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "PolicyStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3803:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                          "typeString": "type(enum Insurance.PolicyStatus)"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3803:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "src": "3793:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "3793:29:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "policyAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "3837:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3853:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3837:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 247,
                  "nodeType": "IfStatement",
                  "src": "3833:80:0",
                  "trueBody": {
                    "id": 246,
                    "nodeType": "Block",
                    "src": "3856:57:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 241,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3871:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 242,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "3880:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Inactive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3880:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "3871:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "id": 245,
                        "nodeType": "ExpressionStatement",
                        "src": "3871:30:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3462:2:0"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3472:0:0"
            },
            "scope": 300,
            "src": "3442:478:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "3958:308:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 253,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "3991:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3991:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 255,
                          "name": "insuranceCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "4005:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3991:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520496e737572616e636520436f6d70616e792063616e2072656a6563742074686520636c61696d2e",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4036:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b1971b0250b7a76234a344a59ab6f67babb8887254a38cd92d8ba538f5a5679",
                          "typeString": "literal_string \"Only the Insurance Company can reject the claim.\""
                        },
                        "value": "Only the Insurance Company can reject the claim."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b1971b0250b7a76234a344a59ab6f67babb8887254a38cd92d8ba538f5a5679",
                          "typeString": "literal_string \"Only the Insurance Company can reject the claim.\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "3969:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3969:128:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "3969:128:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$20",
                          "typeString": "enum Insurance.PolicyStatus"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "4130:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 262,
                            "name": "PolicyStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "4140:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                              "typeString": "type(enum Insurance.PolicyStatus)"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4140:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "src": "4130:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436c61696d206d757374206265206d61646520746f2072656a656374206974",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4175:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aee4c8ef2a219707db18a52d0e3aedc914fed8e25f4bbbb2a93de6f60c8a1a6b",
                          "typeString": "literal_string \"Claim must be made to reject it\""
                        },
                        "value": "Claim must be made to reject it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aee4c8ef2a219707db18a52d0e3aedc914fed8e25f4bbbb2a93de6f60c8a1a6b",
                          "typeString": "literal_string \"Claim must be made to reject it\""
                        }
                      ],
                      "id": 260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "4108:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4108:111:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "4108:111:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 268,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "4230:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "PolicyStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4239:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                          "typeString": "type(enum Insurance.PolicyStatus)"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4239:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "src": "4230:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyStatus_$20",
                      "typeString": "enum Insurance.PolicyStatus"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "4230:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rejectClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3948:2:0"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3958:0:0"
            },
            "scope": 300,
            "src": "3928:338:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "4393:232:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_PolicyStatus_$20",
                      "typeString": "enum Insurance.PolicyStatus"
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 279,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "4408:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 280,
                        "name": "PolicyStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4418:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                          "typeString": "type(enum Insurance.PolicyStatus)"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Claimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4418:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "src": "4408:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "4493:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$20",
                          "typeString": "enum Insurance.PolicyStatus"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 287,
                          "name": "PolicyStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4503:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                            "typeString": "type(enum Insurance.PolicyStatus)"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Inactive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4503:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$20",
                          "typeString": "enum Insurance.PolicyStatus"
                        }
                      },
                      "src": "4493:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 295,
                      "nodeType": "Block",
                      "src": "4576:42:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "416374697665",
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4598:8:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f07b88471cd28dc438f2291190512bd968fbd79b8c86b9ed015e51c1261d911f",
                              "typeString": "literal_string \"Active\""
                            },
                            "value": "Active"
                          },
                          "functionReturnParameters": 278,
                          "id": 294,
                          "nodeType": "Return",
                          "src": "4591:15:0"
                        }
                      ]
                    },
                    "id": 296,
                    "nodeType": "IfStatement",
                    "src": "4489:129:0",
                    "trueBody": {
                      "id": 292,
                      "nodeType": "Block",
                      "src": "4526:44:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "496e616374697665",
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4548:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8ab6980eebf45f7e7935328290280398bfdef3fc0c531ddfb9152f949dbec646",
                              "typeString": "literal_string \"Inactive\""
                            },
                            "value": "Inactive"
                          },
                          "functionReturnParameters": 278,
                          "id": 291,
                          "nodeType": "Return",
                          "src": "4541:17:0"
                        }
                      ]
                    }
                  },
                  "id": 297,
                  "nodeType": "IfStatement",
                  "src": "4404:214:0",
                  "trueBody": {
                    "id": 285,
                    "nodeType": "Block",
                    "src": "4440:43:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "436c61696d6564",
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4462:9:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a35cc0235f835cc84da50813dc84eb10a75e24a21d74d6d86278c0f037cb7429",
                            "typeString": "literal_string \"Claimed\""
                          },
                          "value": "Claimed"
                        },
                        "functionReturnParameters": 278,
                        "id": 284,
                        "nodeType": "Return",
                        "src": "4455:16:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4354:2:0"
            },
            "returnParameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "4378:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4378:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4377:15:0"
            },
            "scope": 300,
            "src": "4336:289:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 301,
        "src": "100:4528:0"
      }
    ],
    "src": "37:4593:0"
  },
  "legacyAST": {
    "absolutePath": "/D/Sem 6/Blockchain/Project/insurance-blockchain-app/contracts/Insurance.sol",
    "exportedSymbols": {
      "Insurance": [
        300
      ]
    },
    "id": 301,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 300,
        "linearizedBaseContracts": [
          300
        ],
        "name": "Insurance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "user",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "154:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "154:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6,
            "name": "insuranceCompany",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "180:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "180:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "hospital",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "218:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "218:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "policyAmount",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "284:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "284:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "premium",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "315:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "315:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "startDate",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "341:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "341:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "endDate",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "369:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "369:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Insurance.PolicyStatus",
            "id": 20,
            "members": [
              {
                "id": 17,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "459:6:0"
              },
              {
                "id": 18,
                "name": "Inactive",
                "nodeType": "EnumValue",
                "src": "476:8:0"
              },
              {
                "id": 19,
                "name": "Claimed",
                "nodeType": "EnumValue",
                "src": "495:7:0"
              }
            ],
            "name": "PolicyStatus",
            "nodeType": "EnumDefinition",
            "src": "430:79:0"
          },
          {
            "constant": false,
            "id": 22,
            "name": "status",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "515:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_PolicyStatus_$20",
              "typeString": "enum Insurance.PolicyStatus"
            },
            "typeName": {
              "contractScope": null,
              "id": 21,
              "name": "PolicyStatus",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20,
              "src": "515:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_PolicyStatus_$20",
                "typeString": "enum Insurance.PolicyStatus"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "claimAmt",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "598:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "598:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Insurance.Procedure",
            "id": 29,
            "members": [
              {
                "constant": false,
                "id": 26,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "722:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 25,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "722:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "744:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "744:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Procedure",
            "nodeType": "StructDefinition",
            "scope": 300,
            "src": "694:72:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 32,
            "name": "procedures",
            "nodeType": "VariableDeclaration",
            "scope": 300,
            "src": "772:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Procedure_$29_storage_$dyn_storage",
              "typeString": "struct Insurance.Procedure[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 30,
                "name": "Procedure",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 29,
                "src": "772:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Procedure_$29_storage_ptr",
                  "typeString": "struct Insurance.Procedure"
                }
              },
              "id": 31,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "772:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Procedure_$29_storage_$dyn_storage_ptr",
                "typeString": "struct Insurance.Procedure[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "904:207:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "939:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "insuranceCompany",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "958:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "hospital",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "989:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 39,
                        "name": "policyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1012:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "premium",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1039:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "startDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1061:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "endDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1085:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35,
                      "name": "createIns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "915:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "915:188:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "915:188:0"
                }
              ]
            },
            "documentation": null,
            "id": 46,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "904:0:0"
            },
            "scope": 300,
            "src": "883:228:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1343:344:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1354:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "307832303739363134443834303044433362663338453635314664363038384243316632453539364539",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1361:42:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x2079614D8400DC3bf38E651Fd6088BC1f2E596E9"
                    },
                    "src": "1354:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 67,
                      "name": "insuranceCompany",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1414:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "307833663063384646366437614633444436353232303664363363643632654539373737374430306661",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1433:42:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x3f0c8FF6d7aF3DD652206d63cd62eE97777D00fa"
                    },
                    "src": "1414:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:61:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 71,
                      "name": "hospital",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1486:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "307837454137396662323732336261463738443446366131334335386531333832363366446365376133",
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1497:42:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x7EA79fb2723baF78D4F6a13C58e138263fDce7a3"
                    },
                    "src": "1486:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "policyAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1550:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1565:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1550:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "premium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1579:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1589:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1579:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:11:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1601:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1613:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1601:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:15:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1627:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "323030",
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1637:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "1627:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1627:13:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1651:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "PolicyStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1660:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                          "typeString": "type(enum Insurance.PolicyStatus)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1660:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "src": "1651:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyStatus_$20",
                      "typeString": "enum Insurance.PolicyStatus"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createIns",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1148:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "_insuranceCompany",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1172:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_hospital",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1208:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "_policyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1236:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_premium",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1265:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "_startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1289:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "_endDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1315:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1137:198:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1343:0:0"
            },
            "scope": 300,
            "src": "1119:568:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "1818:121:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 103,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "1837:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1837:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 105,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1851:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1837:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520757365722063616e207365742074686520706f6c69637920616d6f756e742e",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1857:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd170728183d56f388563872b5146ce355736cd9b705c9862b493112fd1793c9",
                          "typeString": "literal_string \"Only the user can set the policy amount.\""
                        },
                        "value": "Only the user can set the policy amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd170728183d56f388563872b5146ce355736cd9b705c9862b493112fd1793c9",
                          "typeString": "literal_string \"Only the user can set the policy amount.\""
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "1829:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1829:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 110,
                      "name": "claimAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1911:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 111,
                      "name": "_claimAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "1922:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1911:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "_claimAmt",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1795:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1794:16:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1818:0:0"
            },
            "scope": 300,
            "src": "1776:163:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2110:586:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "2143:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2143:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 125,
                          "name": "hospital",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "2157:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2143:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520686f73706974616c2063616e207265636f726420612070726f6365647572652e",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2180:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9499d46b2be886f51a85408a5f1d5d3919ad13eb1daf939a848d338cde425d4a",
                          "typeString": "literal_string \"Only the hospital can record a procedure.\""
                        },
                        "value": "Only the hospital can record a procedure."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9499d46b2be886f51a85408a5f1d5d3919ad13eb1daf939a848d338cde425d4a",
                          "typeString": "literal_string \"Only the hospital can record a procedure.\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "2121:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:113:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:113:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$20",
                          "typeString": "enum Insurance.PolicyStatus"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2267:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 132,
                            "name": "PolicyStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2277:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                              "typeString": "type(enum Insurance.PolicyStatus)"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2277:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "src": "2267:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520706f6c696379206d75737420626520636c61696d656420746f207265636f726420612070726f6365647572652e",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2312:51:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23c4dd57304bfa908d11327eda107380431648bd6cfa28fdd6513099d9726089",
                          "typeString": "literal_string \"The policy must be claimed to record a procedure.\""
                        },
                        "value": "The policy must be claimed to record a procedure."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23c4dd57304bfa908d11327eda107380431648bd6cfa28fdd6513099d9726089",
                          "typeString": "literal_string \"The policy must be claimed to record a procedure.\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "2245:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2245:129:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:129:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "_timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "2407:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "startDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "2420:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2407:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652074696d65206f662070726f6365647572652073686f756c6420626520616674657220737461727420646174652e",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2444:51:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5432c742fcb0f1b68f70c24f7f801ccb39349175343a099200a9ce8c8c094707",
                          "typeString": "literal_string \"The time of procedure should be after start date.\""
                        },
                        "value": "The time of procedure should be after start date."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5432c742fcb0f1b68f70c24f7f801ccb39349175343a099200a9ce8c8c094707",
                          "typeString": "literal_string \"The time of procedure should be after start date.\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "2385:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2385:121:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "2385:121:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "_timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "2539:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "endDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2552:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2539:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652074696d65206f662070726f6365647572652073686f756c64206265666f726520656e6420646174652e",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2574:47:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1829dbcdd50cf2d117fba41b47feb7cfe3e61b40f5e556c241c6f86368df48f7",
                          "typeString": "literal_string \"The time of procedure should before end date.\""
                        },
                        "value": "The time of procedure should before end date."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1829dbcdd50cf2d117fba41b47feb7cfe3e61b40f5e556c241c6f86368df48f7",
                          "typeString": "literal_string \"The time of procedure should before end date.\""
                        }
                      ],
                      "id": 145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "2517:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:115:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2517:115:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "2669:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "_timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "2676:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 155,
                          "name": "Procedure",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "2659:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Procedure_$29_storage_ptr_$",
                            "typeString": "type(struct Insurance.Procedure storage pointer)"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2659:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Procedure_$29_memory",
                          "typeString": "struct Insurance.Procedure memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Procedure_$29_memory",
                          "typeString": "struct Insurance.Procedure memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "procedures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "2643:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Procedure_$29_storage_$dyn_storage",
                          "typeString": "struct Insurance.Procedure storage ref[] storage ref"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2643:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Procedure_$29_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Insurance.Procedure storage ref) returns (uint256)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:45:0"
                }
              ]
            },
            "documentation": null,
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recordProcedure",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2065:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "_timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2086:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2064:38:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2110:0:0"
            },
            "scope": 300,
            "src": "2040:656:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "2770:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 168,
                    "name": "procedures",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "2788:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Procedure_$29_storage_$dyn_storage",
                      "typeString": "struct Insurance.Procedure storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 167,
                  "id": 169,
                  "nodeType": "Return",
                  "src": "2781:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProcedures",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2726:2:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2750:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Procedure_$29_memory_$dyn_memory_ptr",
                    "typeString": "struct Insurance.Procedure[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 164,
                      "name": "Procedure",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 29,
                      "src": "2750:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Procedure_$29_storage_ptr",
                        "typeString": "struct Insurance.Procedure"
                      }
                    },
                    "id": 165,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2750:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Procedure_$29_storage_$dyn_storage_ptr",
                      "typeString": "struct Insurance.Procedure[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2749:20:0"
            },
            "scope": 300,
            "src": "2704:102:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2895:539:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 175,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "2928:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2928:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "2942:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2928:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520757365722063616e20636c61696d2074686520706f6c69637920616d6f756e742e",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2961:44:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7810954e71a8c0461e9b2eb04dfbda2e826fba1a581904207e7aef6358d9ada7",
                          "typeString": "literal_string \"Only the user can claim the policy amount.\""
                        },
                        "value": "Only the user can claim the policy amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7810954e71a8c0461e9b2eb04dfbda2e826fba1a581904207e7aef6358d9ada7",
                          "typeString": "literal_string \"Only the user can claim the policy amount.\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "2906:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2906:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "2906:110:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3049:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 184,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "3059:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3059:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "3049:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3082:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 188,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "3092:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Claimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3092:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "3082:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3049:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520706f6c696379206d75737420626520616374697665206f7220636c61696d656420746f206d616b65206120636c61696d2e",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3127:55:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ff55c984c36c7a43d410c7e8310c54529e38abe56dc9e0351f73f959aa3f055",
                          "typeString": "literal_string \"The policy must be active or claimed to make a claim.\""
                        },
                        "value": "The policy must be active or claimed to make a claim."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ff55c984c36c7a43d410c7e8310c54529e38abe56dc9e0351f73f959aa3f055",
                          "typeString": "literal_string \"The policy must be active or claimed to make a claim.\""
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "3027:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:166:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3027:166:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 196,
                          "name": "claimAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "3226:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "policyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "3238:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3226:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520636c61696d206d757374206265206c657373207468616e206f7220657175616c20746f2074686520706f6c69637920616d6f756e742e",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3265:60:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98af5022111d1e7da4dda966e8ccf1c905bbf499d0237ec9910610f3456294b3",
                          "typeString": "literal_string \"The claim must be less than or equal to the policy amount.\""
                        },
                        "value": "The claim must be less than or equal to the policy amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98af5022111d1e7da4dda966e8ccf1c905bbf499d0237ec9910610f3456294b3",
                          "typeString": "literal_string \"The claim must be less than or equal to the policy amount.\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "3204:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3204:132:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3204:132:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3347:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 203,
                        "name": "PolicyStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3356:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                          "typeString": "type(enum Insurance.PolicyStatus)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Claimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3356:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "src": "3347:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyStatus_$20",
                      "typeString": "enum Insurance.PolicyStatus"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "3347:29:0"
                }
              ]
            },
            "documentation": null,
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2885:2:0"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2895:0:0"
            },
            "scope": 300,
            "src": "2871:563:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "3472:448:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 212,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "3505:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3505:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "insuranceCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "3519:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3505:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520496e737572616e636520436f6d70616e792063616e206163636570742074686520636c61696d2e",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3550:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59ba40b93cf3fc04bd680f81fd0d371589809b85b0ba128512248f96cd68f6d5",
                          "typeString": "literal_string \"Only the Insurance Company can accept the claim.\""
                        },
                        "value": "Only the Insurance Company can accept the claim."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59ba40b93cf3fc04bd680f81fd0d371589809b85b0ba128512248f96cd68f6d5",
                          "typeString": "literal_string \"Only the Insurance Company can accept the claim.\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "3483:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3483:128:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:128:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$20",
                          "typeString": "enum Insurance.PolicyStatus"
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "3644:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 221,
                            "name": "PolicyStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "3654:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                              "typeString": "type(enum Insurance.PolicyStatus)"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3654:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "src": "3644:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436c61696d206d757374206265206d61646520746f20616363657074206974",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3689:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe5c51e88020d296fdf4248e79345f19699ccce26bf526316f1f5d27912dee22",
                          "typeString": "literal_string \"Claim must be made to accept it\""
                        },
                        "value": "Claim must be made to accept it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe5c51e88020d296fdf4248e79345f19699ccce26bf526316f1f5d27912dee22",
                          "typeString": "literal_string \"Claim must be made to accept it\""
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "3622:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3622:111:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3622:111:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "policyAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "3744:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 228,
                        "name": "policyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "3759:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 229,
                        "name": "claimAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "3774:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3759:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3744:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3744:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_PolicyStatus_$20",
                      "typeString": "enum Insurance.PolicyStatus"
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3793:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "PolicyStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3803:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                          "typeString": "type(enum Insurance.PolicyStatus)"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3803:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "src": "3793:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "3793:29:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "policyAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "3837:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3853:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3837:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 247,
                  "nodeType": "IfStatement",
                  "src": "3833:80:0",
                  "trueBody": {
                    "id": 246,
                    "nodeType": "Block",
                    "src": "3856:57:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 241,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3871:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 242,
                              "name": "PolicyStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "3880:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                                "typeString": "type(enum Insurance.PolicyStatus)"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Inactive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3880:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PolicyStatus_$20",
                              "typeString": "enum Insurance.PolicyStatus"
                            }
                          },
                          "src": "3871:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "id": 245,
                        "nodeType": "ExpressionStatement",
                        "src": "3871:30:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3462:2:0"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3472:0:0"
            },
            "scope": 300,
            "src": "3442:478:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "3958:308:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 253,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "3991:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3991:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 255,
                          "name": "insuranceCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "4005:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3991:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520496e737572616e636520436f6d70616e792063616e2072656a6563742074686520636c61696d2e",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4036:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b1971b0250b7a76234a344a59ab6f67babb8887254a38cd92d8ba538f5a5679",
                          "typeString": "literal_string \"Only the Insurance Company can reject the claim.\""
                        },
                        "value": "Only the Insurance Company can reject the claim."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b1971b0250b7a76234a344a59ab6f67babb8887254a38cd92d8ba538f5a5679",
                          "typeString": "literal_string \"Only the Insurance Company can reject the claim.\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "3969:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3969:128:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "3969:128:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$20",
                          "typeString": "enum Insurance.PolicyStatus"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "4130:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 262,
                            "name": "PolicyStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "4140:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                              "typeString": "type(enum Insurance.PolicyStatus)"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4140:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PolicyStatus_$20",
                            "typeString": "enum Insurance.PolicyStatus"
                          }
                        },
                        "src": "4130:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436c61696d206d757374206265206d61646520746f2072656a656374206974",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4175:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aee4c8ef2a219707db18a52d0e3aedc914fed8e25f4bbbb2a93de6f60c8a1a6b",
                          "typeString": "literal_string \"Claim must be made to reject it\""
                        },
                        "value": "Claim must be made to reject it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aee4c8ef2a219707db18a52d0e3aedc914fed8e25f4bbbb2a93de6f60c8a1a6b",
                          "typeString": "literal_string \"Claim must be made to reject it\""
                        }
                      ],
                      "id": 260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        351,
                        352
                      ],
                      "referencedDeclaration": 352,
                      "src": "4108:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4108:111:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "4108:111:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 268,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "4230:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "PolicyStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4239:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                          "typeString": "type(enum Insurance.PolicyStatus)"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4239:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "src": "4230:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyStatus_$20",
                      "typeString": "enum Insurance.PolicyStatus"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "4230:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rejectClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3948:2:0"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3958:0:0"
            },
            "scope": 300,
            "src": "3928:338:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "4393:232:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_PolicyStatus_$20",
                      "typeString": "enum Insurance.PolicyStatus"
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 279,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "4408:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 280,
                        "name": "PolicyStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "4418:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                          "typeString": "type(enum Insurance.PolicyStatus)"
                        }
                      },
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Claimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4418:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      }
                    },
                    "src": "4408:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_PolicyStatus_$20",
                        "typeString": "enum Insurance.PolicyStatus"
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "4493:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$20",
                          "typeString": "enum Insurance.PolicyStatus"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 287,
                          "name": "PolicyStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4503:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PolicyStatus_$20_$",
                            "typeString": "type(enum Insurance.PolicyStatus)"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Inactive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4503:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyStatus_$20",
                          "typeString": "enum Insurance.PolicyStatus"
                        }
                      },
                      "src": "4493:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 295,
                      "nodeType": "Block",
                      "src": "4576:42:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "416374697665",
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4598:8:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f07b88471cd28dc438f2291190512bd968fbd79b8c86b9ed015e51c1261d911f",
                              "typeString": "literal_string \"Active\""
                            },
                            "value": "Active"
                          },
                          "functionReturnParameters": 278,
                          "id": 294,
                          "nodeType": "Return",
                          "src": "4591:15:0"
                        }
                      ]
                    },
                    "id": 296,
                    "nodeType": "IfStatement",
                    "src": "4489:129:0",
                    "trueBody": {
                      "id": 292,
                      "nodeType": "Block",
                      "src": "4526:44:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "496e616374697665",
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4548:10:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8ab6980eebf45f7e7935328290280398bfdef3fc0c531ddfb9152f949dbec646",
                              "typeString": "literal_string \"Inactive\""
                            },
                            "value": "Inactive"
                          },
                          "functionReturnParameters": 278,
                          "id": 291,
                          "nodeType": "Return",
                          "src": "4541:17:0"
                        }
                      ]
                    }
                  },
                  "id": 297,
                  "nodeType": "IfStatement",
                  "src": "4404:214:0",
                  "trueBody": {
                    "id": 285,
                    "nodeType": "Block",
                    "src": "4440:43:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "436c61696d6564",
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4462:9:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a35cc0235f835cc84da50813dc84eb10a75e24a21d74d6d86278c0f037cb7429",
                            "typeString": "literal_string \"Claimed\""
                          },
                          "value": "Claimed"
                        },
                        "functionReturnParameters": 278,
                        "id": 284,
                        "nodeType": "Return",
                        "src": "4455:16:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4354:2:0"
            },
            "returnParameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "4378:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4378:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4377:15:0"
            },
            "scope": 300,
            "src": "4336:289:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 301,
        "src": "100:4528:0"
      }
    ],
    "src": "37:4593:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xEEC61F3B0E889B16e67Fb74C5eDC7494ed83B2C2",
      "transactionHash": "0x473cc184421e18158710de98858ee2c68b52b247c16f96175a932af922b78b3e"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2023-04-05T03:42:03.728Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}